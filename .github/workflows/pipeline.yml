name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ', '), '#skip') }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies and Build
        run: |
          echo "Installing dependencies"
          corepack enable && corepack prepare pnpm@latest --activate
          cd client && pnpm install --frozen-lockfile
          cd ../server && pnpm install --frozen-lockfile
          echo "Building"
          pnpm run build
          mv dist ../dist
          cd ../client
          pnpm run build
          mv dist ../dist/public
      - name: Zip the production build
        run: |
          cd dist
          zip -qr ../tasc-prod.zip .
      - name: deploy to Lambda
        run: >
          aws lambda update-function-code \
            --function-name "tasc-lambda" \
            --zip-file=fileb://tasc-prod.zip
  tag_release:
    needs: build-and-deploy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@a2c70ae13a881faf2b4953baaa9e49731997ab36
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
